services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: apptest-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOST=0.0.0.0
      - LOG_LEVEL=info
      - CORS_ALLOWED_ORIGINS=*
      - EXTERNAL_EMULATOR=true
      - EXTERNAL_EMULATOR_HOST=${EXTERNAL_EMULATOR_HOST:-host.docker.internal}
      - EXTERNAL_EMULATOR_ADB_PORT=${EXTERNAL_EMULATOR_ADB_PORT:-5555}
      - EMULATOR_GRPC_ENDPOINT=${EMULATOR_GRPC_ENDPOINT:-http://envoy:8080}
      - EMULATOR_WEBRTC_PUBLIC_URL=${EMULATOR_WEBRTC_PUBLIC_URL:-http://82.165.175.97:9000}
      - EMULATOR_WEBRTC_ICE_SERVERS=${EMULATOR_WEBRTC_ICE_SERVERS:-stun:stun.l.google.com:19302,stun:stun1.l.google.com:19302}
    volumes:
      - ./var/autoapp:/var/autoapp  # Mount app library and logs
      - adb-keys:/root/.android  # Share ADB keys with emulator
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - apptest-network
    restart: unless-stopped

  emulator:
    image: us-docker.pkg.dev/android-emulator-268719/images/30-google-x64:30.1.2
    container_name: apptest-emulator
    network_mode: host
    devices:
      - /dev/kvm:/dev/kvm
    environment:
      - AVD_CONFIG=hw.cpu.ncore=4
      - ADBKEY=${ADBKEY:-}  # ADB key will be read from shared volume
      - WEBRTC_PORT_RANGE=53000-53100
    volumes:
      - adb-keys:/root/.android  # Share ADB keys with backend
      - ./scripts:/opt/scripts:ro  # Mount scripts directory
      - gps-service:/opt/gpsd  # Persistent volume for GPS service
    shm_size: 1g
    restart: unless-stopped
    command: ["/bin/bash", "-c", "/opt/scripts/setup_gps_microservice.sh && tail -f /dev/null"]

  envoy:
    image: envoyproxy/envoy:v1.30-latest
    container_name: apptest-envoy
    depends_on:
      - emulator
    volumes:
      - ./infra/envoy/envoy.yaml:/etc/envoy/envoy.yaml:ro
    ports:
      - "9000:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - apptest-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: apptest-frontend
    ports:
      - "5173:80"
    networks:
      - apptest-network
    restart: unless-stopped
    depends_on:
      - backend

networks:
  apptest-network:
    driver: bridge

volumes:
  adb-keys:  # Shared volume for ADB authentication keys
  gps-service:  # Persistent volume for GPS microservice
