services:
  traefik:
    image: traefik:v3.1
    container_name: apptest-traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=apptest-network"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websocket.address=:8080"
      - "--log.level=INFO"
      - "--log.format=json"
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--ping=true"
      - "--metrics.prometheus=true"
    ports:
      - "80:80"       # HTTP
      - "443:443"     # HTTPS
      - "8080:8080"   # Traefik Dashboard and WebSocket support
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./infra/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./infra/traefik/dynamic:/etc/traefik/dynamic:ro
      - traefik-logs:/var/log/traefik
      - traefik-acme:/etc/traefik/acme
    networks:
      - apptest-network
    restart: unless-stopped
    depends_on:
      - backend
      - frontend
      - envoy

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: apptest-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOST=0.0.0.0
      - LOG_LEVEL=info
      - CORS_ALLOWED_ORIGINS=*
      - EXTERNAL_EMULATOR=true
      # Discovery System Configuration
      - ENABLE_DISCOVERY=true
      - DISCOVERY_PANEL=true
      - GPS_PANEL=false
      - GRAPH_PATH=/var/autoapp/graph.json
      - SESSIONS_DIR=/var/autoapp/sessions
      - SCREENSHOTS_DIR=/var/autoapp/screenshots
      - ADB_HOST=host.docker.internal
      - ANDROID_SERIAL=emulator-5554
      - SNAPSHOT_TIMEOUT_MS=5000
      - UIXML_TMP=/tmp/view.xml
      - MERGE_THRESHOLD=0.9
      - EXTERNAL_EMULATOR_HOST=${EXTERNAL_EMULATOR_HOST:-host.docker.internal}
      - EXTERNAL_EMULATOR_ADB_PORT=${EXTERNAL_EMULATOR_ADB_PORT:-5555}
      - EMULATOR_GRPC_ENDPOINT=${EMULATOR_GRPC_ENDPOINT:-http://envoy:8080}
      - EMULATOR_WEBRTC_PUBLIC_URL=${EMULATOR_WEBRTC_PUBLIC_URL:-http://82.165.175.97:9000}
      - EMULATOR_WEBRTC_ICE_SERVERS=${EMULATOR_WEBRTC_ICE_SERVERS:-stun:stun.l.google.com:19302,stun:stun1.l.google.com:19302}
    volumes:
      - ./var/autoapp:/var/autoapp  # Mount app library and logs
      - emulator-home:/root/.android  # Share ADB keys with emulator
      - discovery-data:/app/data  # Discovery artifacts storage
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      # Enable Traefik for backend service
      - "traefik.enable=true"
      - "traefik.docker.network=apptest-network"

      # HTTP Router for API endpoints
      - "traefik.http.routers.backend-api.rule=Host(`localhost`, `127.0.0.1`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-api.entrypoints=web"
      - "traefik.http.routers.backend-api.priority=100"

      # HTTPS Router for API endpoints
      - "traefik.http.routers.backend-api-secure.rule=Host(`localhost`, `127.0.0.1`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-api-secure.entrypoints=websecure"
      - "traefik.http.routers.backend-api-secure.tls=true"
      - "traefik.http.routers.backend-api-secure.priority=100"

      # Apply middlewares to API routes
      - "traefik.http.routers.backend-api.middlewares=cors-headers@file,api-ratelimit@file,api-strip-prefix@file,compress@file,security-headers@file"
      - "traefik.http.routers.backend-api-secure.middlewares=cors-headers@file,api-ratelimit@file,api-strip-prefix@file,compress@file,security-headers@file"

      # Service configuration
      - "traefik.http.services.backend-api.loadbalancer.server.port=3001"
      - "traefik.http.services.backend-api.loadbalancer.server.scheme=http"

      # Health check configuration
      - "traefik.http.services.backend-api.loadbalancer.healthcheck.path=/api/healthz"
      - "traefik.http.services.backend-api.loadbalancer.healthcheck.interval=30s"
      - "traefik.http.services.backend-api.loadbalancer.healthcheck.timeout=5s"

      # Health endpoint specific router
      - "traefik.http.routers.backend-health.rule=Host(`localhost`, `127.0.0.1`) && (Path(`/api/healthz`) || Path(`/api/health`))"
      - "traefik.http.routers.backend-health.entrypoints=web,websecure"
      - "traefik.http.routers.backend-health.middlewares=health-check@file"
      - "traefik.http.routers.backend-health.tls=true"
    networks:
      - apptest-network
    restart: unless-stopped

  emulator:
    image: us-docker.pkg.dev/android-emulator-268719/images/30-google-x64:30.1.2
    container_name: apptest-emulator
    network_mode: host
    devices:
      - /dev/kvm:/dev/kvm
    environment:
      - AVD_CONFIG=hw.cpu.ncore=4
      - ADBKEY=${ADBKEY:-}  # ADB key will be read from shared volume
      - WEBRTC_PORT_RANGE=53000-53100
    volumes:
      - emulator-home:/root  # Share ADB keys AND console auth token
    shm_size: 1g
    restart: unless-stopped

  envoy:
    image: envoyproxy/envoy:v1.30-latest
    container_name: apptest-envoy
    depends_on:
      - emulator
    volumes:
      - ./infra/envoy/envoy.yaml:/etc/envoy/envoy.yaml:ro
    ports:
      - "9000:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      # Enable Traefik for Envoy service (WebRTC streaming)
      - "traefik.enable=true"
      - "traefik.docker.network=apptest-network"

      # HTTP Router for WebRTC streaming
      - "traefik.http.routers.webrtc.rule=Host(`localhost`, `127.0.0.1`) && PathPrefix(`/`)"
      - "traefik.http.routers.webrtc.entrypoints=websocket"
      - "traefik.http.routers.webrtc.priority=90"

      # HTTPS Router for WebRTC streaming
      - "traefik.http.routers.webrtc-secure.rule=Host(`localhost`, `127.0.0.1`) && PathPrefix(`/`)"
      - "traefik.http.routers.webrtc-secure.entrypoints=websecure"
      - "traefik.http.routers.webrtc-secure.tls=true"
      - "traefik.http.routers.webrtc-secure.priority=90"

      # Apply WebSocket middlewares
      - "traefik.http.routers.webrtc.middlewares=websocket-headers@file,cors-headers@file"
      - "traefik.http.routers.webrtc-secure.middlewares=websocket-headers@file,cors-headers@file"

      # Service configuration
      - "traefik.http.services.webrtc.loadbalancer.server.port=8080"
      - "traefik.http.services.webrtc.loadbalancer.server.scheme=http"

      # Health check for Envoy
      - "traefik.http.services.webrtc.loadbalancer.healthcheck.path=/healthz"
      - "traefik.http.services.webrtc.loadbalancer.healthcheck.interval=30s"
      - "traefik.http.services.webrtc.loadbalancer.healthcheck.timeout=5s"
    networks:
      - apptest-network
    restart: unless-stopped

  gpsd:
    image: python:3.11-alpine
    container_name: apptest-gpsd
    network_mode: host
    restart: unless-stopped
    environment:
      - ADB_SERVER_HOST=127.0.0.1
      - ADB_SERVER_PORT=5037
    volumes:
      - ./scripts/gpsd_server.py:/opt/gpsd/server.py:ro
      - emulator-home:/root:ro  # read the same console token
    command: |
      sh -lc "
        apk add --no-cache android-tools curl >/dev/null &&
        python /opt/gpsd/server.py
      "
    depends_on:
      - emulator

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: apptest-frontend
    ports:
      - "5173:80"
    labels:
      # Enable Traefik for frontend service
      - "traefik.enable=true"
      - "traefik.docker.network=apptest-network"

      # HTTP Router for frontend application
      - "traefik.http.routers.frontend.rule=Host(`localhost`, `127.0.0.1`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.priority=10"

      # HTTPS Router for frontend application
      - "traefik.http.routers.frontend-secure.rule=Host(`localhost`, `127.0.0.1`)"
      - "traefik.http.routers.frontend-secure.entrypoints=websecure"
      - "traefik.http.routers.frontend-secure.tls=true"
      - "traefik.http.routers.frontend-secure.priority=10"

      # Apply middlewares to frontend routes
      - "traefik.http.routers.frontend.middlewares=compress@file,security-headers@file"
      - "traefik.http.routers.frontend-secure.middlewares=compress@file,security-headers@file"

      # Service configuration
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.services.frontend.loadbalancer.server.scheme=http"

      # Health check for frontend
      - "traefik.http.services.frontend.loadbalancer.healthcheck.path=/"
      - "traefik.http.services.frontend.loadbalancer.healthcheck.interval=30s"
      - "traefik.http.services.frontend.loadbalancer.healthcheck.timeout=5s"
    networks:
      - apptest-network
    restart: unless-stopped
    depends_on:
      - backend

networks:
  apptest-network:
    driver: bridge

volumes:
  emulator-home:  # Shared volume for ADB keys and console auth token
  discovery-data:  # Discovery artifacts storage
  traefik-logs:   # Traefik access logs
  traefik-acme:   # Traefik SSL certificates storage
